@model Post

<div class="containerMain" style="height: fit-content; padding-bottom: 20px;">
    <div>
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" aria-current="page" asp-controller="Home" asp-action="Index">All topics</a>
            </li>
            @if (User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a class="nav-link" aria-current="page" asp-controller="UserProfiles" asp-action="GetAllProfiles" asp-route-pageNumber="1">All users</a>
                </li>
            }
        </ul>
        <div>
            <div>
                <hr style="height: 3px;" />
            </div>
            <div>
                <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item" aria-current="page">
                            <a asp-controller="Home" asp-action="Index">Forum</a>
                        </li>
                        <li class="breadcrumb-item" aria-current="page">
                            <a asp-controller="Topics" asp-action="GetTopicPosts" asp-route-pageNumber="1" asp-route-topicId="@Model.TopicId" asp-route-topicTitle="@ViewBag.TopicTitle"> @ViewBag.TopicTitle </a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">
                            <a asp-controller="Topics" asp-action="ViewPost" asp-route-pageNumber="1" asp-route-postId="@Model.Id" asp-route-topicTitle="@ViewBag.TopicTitle"> @Model.Header </a>
                        </li>
                    </ol>
                </nav>
            </div>
            <div class="containerForPosts">
                <ul class="list-group list-group-hover">
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-2 text-center">
                                @if (Model.Author.DeletedUser)
                                {
                                    <p style="margin-bottom: 5px; color: indianred;"> Deleted User </p>
                                <p style="font-size: x-small; color: grey;"> @Model.Author.UserRole</p>
                                }
                                else
                                {
                                    <p style="margin-bottom: 5px;">@Model.Author.Username</p>
                                <p style="font-size: x-small; color: grey;"> @Model.Author.UserRole</p>
                                }
                                @if (Model.Author.UserPhoto != null && !Model.Author.DeletedUser)
                                {
                                    <img src="data:image/jpeg;base64,@Model.Author.UserPhoto" class="img-fluid" style="height:70px;">
                                }
                                else
                                {
                                    <img src="~/images/DefaultUserAvatar.jpg" class="img-fluid" style="height:70px;">
                                }
                                <p style="font-size: xx-small; color: grey; margin-top:5px;"> Registration date: @Model.Author.RegistrationDate.ToString("")</p>
                            </div>
                            <div class="col-10">
                                <div class="card">
                                    <div class="card-header">
                                        <span>@Model.Header </span>
                                        <span style="float:right; font-size: 10px; color: black;"> Published @Model.PostPublishingTime.ToString("dd.MM.yyyy HH:mm")</span>
                                        @if (Model.WasEdited)
                                        {
                                            <span style="float:right; font-size: 10px; color: black;">Edited @Model.LastEdited.Value.ToString("dd.MM.yyyy HH:mm") // </span>
                                        }
                                    </div>
                                    <div class="card-body">
                                        <p class="card-text">@Model.Text</p>
                                        @if (Model.Attachments.Any())
                                        {
                                            foreach (var att in Model.Attachments)
                                            {
                                                <img src="data:image/jpeg;base64,@att.File" class="img-fluid" style="width: 100px;">
                                            }
                                        }
                                    </div>
                                    <div class="card-footer text-center">
                                        @if (Model.AuthorId != int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value))
                                        {
                                            <button class="btn btn-outline-info" style="display:inline;" onclick="openCommentForm()">Reply</button>
                                        }
                                        @if (Model.Author.Id == int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value))
                                        {
                                            <a class="btn btn-outline-info" style="display: inline; margin-right: 5px;" data-bs-toggle="modal" data-bs-target="#editPostForm"> Edit </a>
                                        }
                                        @if (User.IsInRole("Admin") || int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value) == Model.AuthorId && !Model.Comments.Items.Any())
                                        {
                                            <form method="post" asp-controller="Topics" asp-action="DeletePost" style="display:inline;">
                                                <input type="hidden" name="postId" value="@Model.Id" />
                                                <input type="hidden" name="commentsToPost" value="@Model.Comments.Items.Any()" />
                                                <input type="hidden" name="authorId" value="@Model.AuthorId" />
                                                <input type="hidden" name="topicId" value="@Model.TopicId" />
                                                <input type="hidden" name="topicTitle" value="@ViewBag.TopicTitle" />
                                                <button type="submit" class="btn btn-outline-danger" >Delete</button>
                                            </form>
                                        }
                                        
                                        @{
                                            int userId = int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value);
                                            int likes = Model.Reactions.Where(x => x.Like).Count();
                                            int dislikes = Model.Reactions.Where(x => x.Dislike).Count();
                                            bool postLiked = Model.Reactions.Exists(x => x.AuthorId == userId && x.Like);
                                            bool postDisliked = Model.Reactions.Exists(x => x.AuthorId == userId && x.Dislike);

                                        }
                                        @if (postDisliked)
                                        {
                                            <button class="reactionBtn active" id="postDislikesBtn" onclick="postReaction(@userId, @Model.Id, false, true)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down-fill" viewBox="0 0 16 16">
                                                    <path d="M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.38 1.38 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51q.205.03.443.051c.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.9 1.9 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.856 0-.29-.036-.586-.113-.857a2 2 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.2 3.2 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28H8c-.605 0-1.07.08-1.466.217a4.8 4.8 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591" />
                                                </svg>
                                                <span id="negativeReactionsToPost"> @dislikes</span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="reactionBtn" id="postDislikesBtn" onclick="postReaction(@userId, @Model.Id, false, true)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down" viewBox="0 0 16 16">
                                                    <path d="M8.864 15.674c-.956.24-1.843-.484-1.908-1.42-.072-1.05-.23-2.015-.428-2.59-.125-.36-.479-1.012-1.04-1.638-.557-.624-1.282-1.179-2.131-1.41C2.685 8.432 2 7.85 2 7V3c0-.845.682-1.464 1.448-1.546 1.07-.113 1.564-.415 2.068-.723l.048-.029c.272-.166.578-.349.97-.484C6.931.08 7.395 0 8 0h3.5c.937 0 1.599.478 1.934 1.064.164.287.254.607.254.913 0 .152-.023.312-.077.464.201.262.38.577.488.9.11.33.172.762.004 1.15.069.13.12.268.159.403.077.27.113.567.113.856s-.036.586-.113.856c-.035.12-.08.244-.138.363.394.571.418 1.2.234 1.733-.206.592-.682 1.1-1.2 1.272-.847.283-1.803.276-2.516.211a10 10 0 0 1-.443-.05 9.36 9.36 0 0 1-.062 4.51c-.138.508-.55.848-1.012.964zM11.5 1H8c-.51 0-.863.068-1.14.163-.281.097-.506.229-.776.393l-.04.025c-.555.338-1.198.73-2.49.868-.333.035-.554.29-.554.55V7c0 .255.226.543.62.65 1.095.3 1.977.997 2.614 1.709.635.71 1.064 1.475 1.238 1.977.243.7.407 1.768.482 2.85.025.362.36.595.667.518l.262-.065c.16-.04.258-.144.288-.255a8.34 8.34 0 0 0-.145-4.726.5.5 0 0 1 .595-.643h.003l.014.004.058.013a9 9 0 0 0 1.036.157c.663.06 1.457.054 2.11-.163.175-.059.45-.301.57-.651.107-.308.087-.67-.266-1.021L12.793 7l.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581s-.027-.414-.075-.581c-.05-.174-.111-.273-.154-.315l-.353-.354.353-.354c.047-.047.109-.176.005-.488a2.2 2.2 0 0 0-.505-.804l-.353-.354.353-.354c.006-.005.041-.05.041-.17a.9.9 0 0 0-.121-.415C12.4 1.272 12.063 1 11.5 1" />
                                                </svg>
                                                <span id="negativeReactionsToPost"> @dislikes</span>
                                            </button>
                                       }
                                        @if (postLiked)
                                        {
                                            <button class="reactionBtn active" id="postLikesBtn" onclick="postReaction(@userId, @Model.Id, true, false)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up-fill" viewBox="0 0 16 16">
                                                    <path d="M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a10 10 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733q.086.18.138.363c.077.27.113.567.113.856s-.036.586-.113.856c-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.2 3.2 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.8 4.8 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z" />
                                                </svg>
                                                <span id="positiveReactionsToPost">@likes </span>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="reactionBtn" id="postLikesBtn" onclick="postReaction(@userId, @Model.Id, true, false)">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up" viewBox="0 0 16 16">
                                                    <path d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2 2 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a10 10 0 0 0-.443.05 9.4 9.4 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a9 9 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.2 2.2 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.9.9 0 0 1-.121.416c-.165.288-.503.56-1.066.56z" />
                                                </svg>
                                                <span id="positiveReactionsToPost">@likes </span>
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </li>
                    @if (Model.Comments.Items.Any())
                    {

                        @foreach (var comment in Model.Comments.Items)
                        {
                            <li class="list-group-item">
                                <div class="commentsBlock">
                                    @{
                                        comment.Position = new CurrentPaginationPositionSettings { PageNumber = Model.Comments.TotalPages, TopicId = Model.TopicId, TopicTitle = @ViewBag.TopicTitle };
                                    }
                                    <div class="card">
                                        <div class="card-header">
                                            @if(comment.ParentId > 0)
                                            {
                                                string[] words = comment.Parent.Text.Split(' ');
                                                string trimmedComment = string.Join(' ', words.Take(5));
                                                <span>
                                                    @if (comment.Author.DeletedUser)
                                                    {
                                                        <b>Deleted User</b>

                                                    }
                                                    else
                                                    {
                                                        <b>@comment.Author.Username</b>
                                                    }
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-right" viewBox="0 0 16 16">
                                                        <path fill-rule="evenodd" d="M1.5 1.5A.5.5 0 0 0 1 2v4.8a2.5 2.5 0 0 0 2.5 2.5h9.793l-3.347 3.346a.5.5 0 0 0 .708.708l4.2-4.2a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 8.3H3.5A1.5 1.5 0 0 1 2 6.8V2a.5.5 0 0 0-.5-.5" />
                                                    </svg>
                                                    @if(comment.Parent.Author.DeletedUser)
                                                    {
                                                        <b>Deleted User</b>
                                                    }
                                                    else
                                                    {
                                                        <b>@comment.Parent.Author.Username</b>
                                                    }
                                                    "@trimmedComment"
                                                </span>
                                            }
                                            else
                                            {
                                                @if(comment.Author.DeletedUser)
                                                {
                                                    <span><b>Deleted User</b> </span>
                                                }
                                                else
                                                {
                                                    <span><b>@comment.Author.Username</b> </span>
                                                }
                                            }
                                            <span style="float:right; font-size: 10px; color: black;">Published @comment.PublishingTime.ToString("dd.MM.yyyy HH:mm")</span>
                                            @if (comment.WasEdited)
                                                {
                                                    <span style="float:right; font-size: 10px; color: black;">Edited @comment.LastEdited.Value.ToString("dd.MM.yyyy HH:mm") // </span>
                                                }
                                        </div>
                                        <div class="card-body">
                                            <p class="card-text">@comment.Text</p>
                                        </div>
                                        <div class="card-footer text-center">
                                            @{DateTime commentEditAllowed = comment.PublishingTime.AddMinutes(5);}

                                            @if (comment.AuthorId != int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value) && !comment.Author.DeletedUser)
                                            {
                                                <button class="btn btn-outline-info" style="display:inline;" onclick="openChildCommentForm('@comment.Id','@comment.AuthorId', '@comment.Author.Username')">Reply</button>
                                            }
                                            @if (int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value) == comment.AuthorId && DateTime.Now < commentEditAllowed)
                                            {
                                                <button class="btn btn-outline-info" style="display: inline; margin-right: 5px;" onclick="openEditCommentForm('@comment.Text', @comment.Id, @comment.Position.PageNumber)"> Edit </button>
                                            }
                                            @if (User.IsInRole("Admin") || int.Parse(User.Claims.FirstOrDefault(x => x.Type == "UserId").Value) == comment.AuthorId && !comment.HasChildComments)
                                            {
                                                <form method="post" asp-controller="Comments" asp-action="DeleteComment" style="display:inline;">
                                                    <input type="hidden" name="commentId" value="@comment.Id" />
                                                    <input type="hidden" name="childComments" value="@comment.HasChildComments" />
                                                    <input type="hidden" name="authorId" value="@comment.Author.Id" />
                                                    <input type="hidden" name="pageNumber" value="@comment.Position.PageNumber" />
                                                    <input type="hidden" name="topicId" value="@comment.Position.TopicId" />
                                                    <input type="hidden" name="topicTitle" value="@comment.Position.TopicTitle" />
                                                    <input type="hidden" name="postId" value="@Model.Id" />
                                                    <button type="submit" class="btn btn-outline-danger">Delete</button>
                                                </form>
                                            }
                                            @{
                                                int likesCom = comment.Reactions.Where(x => x.Like).Count();
                                                int dislikesCom = comment.Reactions.Where(x => x.Dislike).Count();
                                                bool commentLiked = comment.Reactions.Exists(x => x.AuthorId == userId && x.Like);
                                                bool commentDisliked = comment.Reactions.Exists(x => x.AuthorId == userId && x.Dislike);
                                            }
                                            @if (commentDisliked)
                                            {
                                                <button class="reactionBtn active" id="commentDislikesBtn_@comment.Id" onclick="commentReaction(@userId, @comment.Id, false, true)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down-fill" viewBox="0 0 16 16">
                                                        <path d="M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.38 1.38 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51q.205.03.443.051c.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.9 1.9 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.856 0-.29-.036-.586-.113-.857a2 2 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.2 3.2 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28H8c-.605 0-1.07.08-1.466.217a4.8 4.8 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591" />
                                                    </svg>
                                                    <span id="negativeReactionsToComment_@comment.Id">@dislikesCom</span>
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="reactionBtn" id="commentDislikesBtn_@comment.Id" onclick="commentReaction(@userId, @comment.Id, false, true)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-down" viewBox="0 0 16 16">
                                                        <path d="M8.864 15.674c-.956.24-1.843-.484-1.908-1.42-.072-1.05-.23-2.015-.428-2.59-.125-.36-.479-1.012-1.04-1.638-.557-.624-1.282-1.179-2.131-1.41C2.685 8.432 2 7.85 2 7V3c0-.845.682-1.464 1.448-1.546 1.07-.113 1.564-.415 2.068-.723l.048-.029c.272-.166.578-.349.97-.484C6.931.08 7.395 0 8 0h3.5c.937 0 1.599.478 1.934 1.064.164.287.254.607.254.913 0 .152-.023.312-.077.464.201.262.38.577.488.9.11.33.172.762.004 1.15.069.13.12.268.159.403.077.27.113.567.113.856s-.036.586-.113.856c-.035.12-.08.244-.138.363.394.571.418 1.2.234 1.733-.206.592-.682 1.1-1.2 1.272-.847.283-1.803.276-2.516.211a10 10 0 0 1-.443-.05 9.36 9.36 0 0 1-.062 4.51c-.138.508-.55.848-1.012.964zM11.5 1H8c-.51 0-.863.068-1.14.163-.281.097-.506.229-.776.393l-.04.025c-.555.338-1.198.73-2.49.868-.333.035-.554.29-.554.55V7c0 .255.226.543.62.65 1.095.3 1.977.997 2.614 1.709.635.71 1.064 1.475 1.238 1.977.243.7.407 1.768.482 2.85.025.362.36.595.667.518l.262-.065c.16-.04.258-.144.288-.255a8.34 8.34 0 0 0-.145-4.726.5.5 0 0 1 .595-.643h.003l.014.004.058.013a9 9 0 0 0 1.036.157c.663.06 1.457.054 2.11-.163.175-.059.45-.301.57-.651.107-.308.087-.67-.266-1.021L12.793 7l.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581s-.027-.414-.075-.581c-.05-.174-.111-.273-.154-.315l-.353-.354.353-.354c.047-.047.109-.176.005-.488a2.2 2.2 0 0 0-.505-.804l-.353-.354.353-.354c.006-.005.041-.05.041-.17a.9.9 0 0 0-.121-.415C12.4 1.272 12.063 1 11.5 1" />
                                                    </svg>
                                                    <span id="negativeReactionsToComment_@comment.Id">@dislikesCom</span>
                                                </button>
                                            }
                                            @if(commentLiked){
                                                <button class="reactionBtn active" id="commentLikesBtn_@comment.Id" onclick="commentReaction(@userId, @comment.Id, true, false)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up-fill" viewBox="0 0 16 16">
                                                        <path d="M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a10 10 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733q.086.18.138.363c.077.27.113.567.113.856s-.036.586-.113.856c-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.2 3.2 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.8 4.8 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z" />
                                                    </svg>
                                                    <span id="positiveReactionsToComment_@comment.Id">@likesCom</span>
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="reactionBtn" id="commentLikesBtn_@comment.Id" onclick="commentReaction(@userId, @comment.Id, true, false)">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hand-thumbs-up" viewBox="0 0 16 16">
                                                        <path d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2 2 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a10 10 0 0 0-.443.05 9.4 9.4 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a9 9 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.2 2.2 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.9.9 0 0 1-.121.416c-.165.288-.503.56-1.066.56z" />
                                                    </svg>
                                                    <span id="positiveReactionsToComment_@comment.Id">@likesCom</span>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <div>
                            <p class="emptyListTag">No comments yet </p>
                        </div>
                    }
                    <div id="newCommentForm" style="margin: 1% 20% 1% 20%; display:none;">
                        <div class="card border border-light">
                            <div class="card-body text-center justify-content-center">
                                <form method="post" asp-controller="Comments" asp-action="LeaveComment">
                                    <input type="hidden" name="postId" value="@Model.Id" />
                                    <input type="hidden" name="authorId" value="@int.Parse(User.Claims.FirstOrDefault(x=>x.Type == "UserId").Value)" />
                                    <input type="hidden" name="parentAuthorId" value="@Model.AuthorId" />
                                    <textarea class="form-control" id="commentText" name="text" required maxlength="500" placeholder="Reply"></textarea>
                                    @{
                                        int pageNumber = Model.Comments.Items.Any() ? Model.Comments.TotalPages : 1;
                                    }
                                    <input type="hidden" name="pageNumber" value="@pageNumber" />
                                    <input type="hidden" name="topicId" value="@Model.TopicId" />
                                    <input type="hidden" name="topicTitle" value="@ViewBag.TopicTitle" />
                                    <button type="submit" id="sendCommentBtn" class="btn btn-outline-info" disabled style="margin-top: 10px;"> Ok </button>
                                    <button type="button" class="btn btn-outline-danger" style="margin-top: 10px;" onclick="closeCommentForm()"> Cancel </button>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div id="childCommentForm" style="margin: 1% 20% 1% 20%; display:none">
                        <div class="card border border-light">
                            <div class="card-body text-center justify-content-center">
                                <form method="post" asp-controller="Comments" asp-action="LeaveComment">
                                    <input type="hidden" id="parentCommentId" name="parentId" />
                                    <input type="hidden" name="authorId" value="@int.Parse(User.Claims.FirstOrDefault(x=>x.Type == "UserId").Value)" />
                                    <input type="hidden" id="parentCommentAuthorId" name="parentAuthorId" />
                                    <label class="form-control" id="parentAuthorName"></label>
                                    <textarea class="form-control" id="childCommentText" name="text" required maxlength="500" placeholder="Reply"></textarea>
                                    @{
                                        int pageNumberChild = Model.Comments.Items.Any() ? Model.Comments.TotalPages : 1;
                                    }
                                    <input type="hidden" name="pageNumber" value="@pageNumberChild" />
                                    <input type="hidden" name="topicId" value="@Model.TopicId" />
                                    <input type="hidden" name="topicTitle" value="@ViewBag.TopicTitle" />
                                    <input type="hidden" name="postId" value="@Model.Id" />
                                    <button type="submit" id="sendChildCommentBtn" class="btn btn-outline-info" disabled style="margin-top: 10px;"> Ok </button>
                                    <button type="button" class="btn btn-outline-danger" style="margin-top: 10px;" onclick="closeChildCommentForm()">Cancel</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </ul>

            </div>
            @if (Model.Comments.Items.Any())
            {
                int prevPageLink = Model.Comments.HasPreviousPage ? Model.Comments.PageIndex - 1 : 1;
                int nextPageLink = Model.Comments.HasNextPage ? Model.Comments.PageIndex + 1 : Model.Comments.TotalPages;
                <div class="pagination justify-content-center mt-3">
                    @if (Model.Comments.HasPreviousPage)
                    {
                        <a asp-controller="Topics" asp-action="ViewPost" asp-route-pageNumber="@(prevPageLink)" asp-route-postId="@Model.Id" asp-route-topicTitle="@ViewBag.TopicTitle" aria-label="Previous">
                            <span aria-hidden="true">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
                                    <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
                                </svg>
                            </span>
                        </a>
                    }
                    @for (int i = 1; i <= Model.Comments.TotalPages; i++)
                    {
                        <a style="height:20px; width: 20px; margin: 3px;" asp-controller="Topics" asp-action="ViewPost" asp-route-pageNumber="@i" asp-route-postId="@Model.Id" asp-route-topicTitle="@ViewBag.TopicTitle">@i</a>
                    }
                    @if (Model.Comments.HasNextPage)
                    {
                        <a asp-controller="Topics" asp-action="ViewPost" asp-route-pageNumber="@(nextPageLink)" asp-route-postId="@Model.Id" asp-route-topicTitle="@ViewBag.TopicTitle" aria-label="Next">
                            <span aria-hidden="true">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708z" />
                                    <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708z" />
                                </svg>
                            </span>
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="editPostForm" tabindex="-1" aria-labelledby="editPostFormModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editPostFormModalLabel">Please, edit your post </h1>
            </div>
            <div class="modal-body text-center">
                <form method="post" asp-controller="Topics" asp-action="EditPost" id="editForm" enctype="multipart/form-data">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input class="form-control" type="text" name="header" required maxlenght="150" style="width:90%; margin-top:5px; margin-bottom:5px;" value="@Model.Header"/>
                    <textarea class="form-control" name="text" required maxlength="1000" style="width:90%;">@Model.Text</textarea>
                    @if (Model.Attachments.Any())
                    {
                        <div class="imageGallery">
                            @foreach(var att in Model.Attachments)
                            {
                                <div class="imageContainer">
                                    <img src="data:image/jpeg;base64,@att.File" class="img-fluid image" id="@att.Id" style="width:15%;">
                                    <span class="delete-icon" onmouseover="makeGrayscale(this.previousElementSibling)" onmouseout="revertGrayscale(this.previousElementSibling)" onclick="deleteImage(this.previousElementSibling, this)">
                                       <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg deleteIcon" viewBox="0 0 16 16" data-toggle="tooltip" title="Delete Image">
                                            <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                                        </svg>
                                    </span>
                                </div>
                            }
                        </div>
                    }
                    <input type="hidden" id="deletedAttachments" name="deletedAttachments" />
                    <input class="form-control" type="file" name="newAttachments" id="newAttachments" multiple accept=".jpg, .png" style="display: none; width:80%; text-align: center; margin:auto; margin-top: 10px;"><br />
                    <input type="hidden" name="pageNumber" value="1" />
                    <input type="hidden" name="topicId" value="@Model.TopicId" />
                    <input type="hidden" name="topicTitle" value="@ViewBag.TopicTitle" />
                    <button type="submit" class="btn btn-outline-info" style="margin-top: 10px; margin-right: 5px;"> Ok </button>
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" style="margin-top: 10px;">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editCommentForm" tabindex="-1" aria-labelledby="editCommentFormModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editPostFormModalLabel">Please, edit your comment </h1>
            </div>
            <div class="modal-body text-center">
                <form method="post" asp-controller="Comments" asp-action="EditComment">
                    <input type="hidden" name="id" id="editCommentId"/>
                    <textarea class="form-control" id="editCommentText" name="text" required maxlength="500"></textarea>
                    <input type="hidden" name="pageNumber" id="editCommentPageNumber" />
                    <input type="hidden" name="topicId" value="@Model.TopicId"/>
                    <input type="hidden" name="topicTitle" value="@ViewBag.TopicTitle" />
                    <input type="hidden" name="postId" value="@Model.Id" />
                    <button type="submit" class="btn btn-outline-info" style="margin-top: 10px; margin-right: 5px;">Ok</button>
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal" style="margin-top: 10px;">Cancel</button>
                </form> 
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="~/js/CommentValidator.js" asp-append-version="true"></script>
    <script>
        function openChildCommentForm(parentId, parentAuthorId, parentAuthorName) {
            closeCommentForm();
            document.getElementById('childCommentForm').style.display = 'block';
            document.getElementById('parentCommentId').value = parentId;
            document.getElementById('parentCommentAuthorId').value = parentAuthorId;
            var label = document.getElementById('parentAuthorName');
            label.innerText = `You replied to ${parentAuthorName}`;
            document.getElementById('childCommentForm').scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
        
        function closeChildCommentForm() {
            document.getElementById('childCommentForm').style.display = 'none';
        }
        
        function closeCommentForm() {
            document.getElementById('newCommentForm').style.display = 'none';
        }
        
        function openCommentForm()
        {
            closeChildCommentForm();
            document.getElementById('newCommentForm').style.display = 'block';
            document.getElementById('newCommentForm').scrollIntoView({ behavior: 'smooth', block: 'start' });
        }

        var deletedImages = "";
        var allowedNewImages = 5 - @Model.Attachments.Count();
        
        function deleteImage(image, span) {
            image.classList.add("hiddenImage");
            span.classList.add("hiddenImage");
            deletedImages += (deletedImages === "") ? image.id : `,${image.id}`;
            allowedNewImages++;
        }

        function checkNewAttAllowed() {
           
            if (allowedNewImages === 0) {
                document.getElementById('newAttachments').style.display = 'none';
            } else { 
                document.getElementById('newAttachments').style.display = 'block';
            }
        }

        setInterval(checkNewAttAllowed, 1000);

        function getExtension(filename) {
            var parts = filename.split('.');
            return parts[parts.length - 1];
        }

        function isImage(filename) {
            var ext = getExtension(filename);
            switch (ext.toLowerCase()) {
                case 'jpg':
                case 'png':
                    return true;
            }
            return false;
        }

        function makeGrayscale(image) {
            image.classList.add("grayscale");
        }

        function revertGrayscale(image) {
            image.classList.remove("grayscale");
        }

        $(document).ready(function () {
            $('#editPostForm').on('hide.bs.modal', function () {
                deletedImages = "";
                allowedNewImages = 5 - @Model.Attachments.Count();
            });

            $('#editForm').submit(function () {
                if (!deletedImages == "") {
                    $('#deletedAttachments').val(deletedImages)
                }
                else{
                    $('#deletedAttachments').val("0")
                }
            });

            $("#newAttachments").on("change", function () {
                if ($("#newAttachments")[0].files.length > allowedNewImages) {
                    alert("Too much images");
                    this.form.reset();
                }
                else if (Array.from($("#newAttachments")[0].files).some(x => (x.size > 5242880))) {
                    alert("size error");
                    this.form.reset();
                }
                else if (Array.from($("#newAttachments")[0].files).some(x => !isImage(x.name))) {
                    alert("type error");
                    this.form.reset();
                }
                else {
                    var newImages = document.getElementById('newAttachments').files.lenght;
                    allowedNewImages += newImages;
                }
            });

            $('[data-toggle="tooltip"]').tooltip();

         

        });

        function openEditCommentForm(text, id, pageNumber) {
            document.getElementById('editCommentId').value = id;
            document.getElementById('editCommentText').value = text;
            document.getElementById('editCommentPageNumber').value = pageNumber;

            $('#editCommentForm').modal('show');
        }

        var likeEmpty = 'M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2 2 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a10 10 0 0 0-.443.05 9.4 9.4 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a9 9 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.2 2.2 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.9.9 0 0 1-.121.416c-.165.288-.503.56-1.066.56z';
        var likeActive = 'M6.956 1.745C7.021.81 7.908.087 8.864.325l.261.066c.463.116.874.456 1.012.965.22.816.533 2.511.062 4.51a10 10 0 0 1 .443-.051c.713-.065 1.669-.072 2.516.21.518.173.994.681 1.2 1.273.184.532.16 1.162-.234 1.733q.086.18.138.363c.077.27.113.567.113.856s-.036.586-.113.856c-.039.135-.09.273-.16.404.169.387.107.819-.003 1.148a3.2 3.2 0 0 1-.488.901c.054.152.076.312.076.465 0 .305-.089.625-.253.912C13.1 15.522 12.437 16 11.5 16H8c-.605 0-1.07-.081-1.466-.218a4.8 4.8 0 0 1-.97-.484l-.048-.03c-.504-.307-.999-.609-2.068-.722C2.682 14.464 2 13.846 2 13V9c0-.85.685-1.432 1.357-1.615.849-.232 1.574-.787 2.132-1.41.56-.627.914-1.28 1.039-1.639.199-.575.356-1.539.428-2.59z';

        var dislikeEmpty = 'M8.864 15.674c-.956.24-1.843-.484-1.908-1.42-.072-1.05-.23-2.015-.428-2.59-.125-.36-.479-1.012-1.04-1.638-.557-.624-1.282-1.179-2.131-1.41C2.685 8.432 2 7.85 2 7V3c0-.845.682-1.464 1.448-1.546 1.07-.113 1.564-.415 2.068-.723l.048-.029c.272-.166.578-.349.97-.484C6.931.08 7.395 0 8 0h3.5c.937 0 1.599.478 1.934 1.064.164.287.254.607.254.913 0 .152-.023.312-.077.464.201.262.38.577.488.9.11.33.172.762.004 1.15.069.13.12.268.159.403.077.27.113.567.113.856s-.036.586-.113.856c-.035.12-.08.244-.138.363.394.571.418 1.2.234 1.733-.206.592-.682 1.1-1.2 1.272-.847.283-1.803.276-2.516.211a10 10 0 0 1-.443-.05 9.36 9.36 0 0 1-.062 4.51c-.138.508-.55.848-1.012.964zM11.5 1H8c-.51 0-.863.068-1.14.163-.281.097-.506.229-.776.393l-.04.025c-.555.338-1.198.73-2.49.868-.333.035-.554.29-.554.55V7c0 .255.226.543.62.65 1.095.3 1.977.997 2.614 1.709.635.71 1.064 1.475 1.238 1.977.243.7.407 1.768.482 2.85.025.362.36.595.667.518l.262-.065c.16-.04.258-.144.288-.255a8.34 8.34 0 0 0-.145-4.726.5.5 0 0 1 .595-.643h.003l.014.004.058.013a9 9 0 0 0 1.036.157c.663.06 1.457.054 2.11-.163.175-.059.45-.301.57-.651.107-.308.087-.67-.266-1.021L12.793 7l.353-.354c.043-.042.105-.14.154-.315.048-.167.075-.37.075-.581s-.027-.414-.075-.581c-.05-.174-.111-.273-.154-.315l-.353-.354.353-.354c.047-.047.109-.176.005-.488a2.2 2.2 0 0 0-.505-.804l-.353-.354.353-.354c.006-.005.041-.05.041-.17a.9.9 0 0 0-.121-.415C12.4 1.272 12.063 1 11.5 1';
        var dislikeActive = 'M6.956 14.534c.065.936.952 1.659 1.908 1.42l.261-.065a1.38 1.38 0 0 0 1.012-.965c.22-.816.533-2.512.062-4.51q.205.03.443.051c.713.065 1.669.071 2.516-.211.518-.173.994-.68 1.2-1.272a1.9 1.9 0 0 0-.234-1.734c.058-.118.103-.242.138-.362.077-.27.113-.568.113-.856 0-.29-.036-.586-.113-.857a2 2 0 0 0-.16-.403c.169-.387.107-.82-.003-1.149a3.2 3.2 0 0 0-.488-.9c.054-.153.076-.313.076-.465a1.86 1.86 0 0 0-.253-.912C13.1.757 12.437.28 11.5.28H8c-.605 0-1.07.08-1.466.217a4.8 4.8 0 0 0-.97.485l-.048.029c-.504.308-.999.61-2.068.723C2.682 1.815 2 2.434 2 3.279v4c0 .851.685 1.433 1.357 1.616.849.232 1.574.787 2.132 1.41.56.626.914 1.28 1.039 1.638.199.575.356 1.54.428 2.591';


        function postReaction(userId, postId, like, dislike) {
            $.ajax({
                url: '/Topics/PostReaction',
                type: 'POST',
                data: { AuthorId: userId, TargetId: postId, Like: like, Dislike: dislike },
                success: function (data) {
                    $('#positiveReactionsToPost').text(data.likes);
                    $('#negativeReactionsToPost').text(data.dislikes);

                    var reactionBtnLike = $('#postLikesBtn');
                    var reactionBtnDislike = $('#postDislikesBtn');

                    
                    if (like && !reactionBtnLike.hasClass('active')) {
                        reactionBtnLike.find('svg path').attr('d', likeActive);
                        reactionBtnDislike.find('svg path').attr('d', dislikeEmpty);
                        reactionBtnLike.addClass('active');
                        reactionBtnDislike.removeClass('active');
                    }
                    else if (like && reactionBtnLike.hasClass('active')) {
                        reactionBtnLike.find('svg path').attr('d', likeEmpty);
                        reactionBtnLike.removeClass('active');
                    }
                    else if (dislike && !reactionBtnDislike.hasClass('active')) {
                        reactionBtnLike.find('svg path').attr('d', likeEmpty);
                        reactionBtnDislike.find('svg path').attr('d', dislikeActive);
                        reactionBtnDislike.addClass('active');
                        reactionBtnLike.removeClass('active');
                    }
                    else if (dislike && reactionBtnDislike.hasClass('active'))
                    {
                        reactionBtnDislike.find('svg path').attr('d', dislikeEmpty);
                        reactionBtnDislike.removeClass('active');
                    }

                },
                error: function () {
                    alert('Something went wrong!');
                }
            })
        }

        function commentReaction(userId, commentId, like, dislike) {
            $.ajax({
                url: '/Comments/CommentReaction',
                type: 'POST',
                data: { AuthorId: userId, TargetId: commentId, Like: like, Dislike: dislike },
                success: function (data) {
                    $('#positiveReactionsToComment_' + commentId).text(data.likes);
                    $('#negativeReactionsToComment_' + commentId).text(data.dislikes);

                    var reactionBtnLike = $('#commentLikesBtn_' + commentId);
                    var reactionBtnDislike = $('#commentDislikesBtn_' + commentId);
                    if (like && !reactionBtnLike.hasClass('active')) {
                        reactionBtnLike.find('svg path').attr('d', likeActive);
                        reactionBtnDislike.find('svg path').attr('d', dislikeEmpty);
                        reactionBtnLike.addClass('active');
                        reactionBtnDislike.removeClass('active');
                    }
                    else if (like && reactionBtnLike.hasClass('active')){
                        reactionBtnLike.find('svg path').attr('d', likeEmpty);
                        reactionBtnLike.removeClass('active');
                    }
                    else if (dislike && !reactionBtnDislike.hasClass('active')) {
                        reactionBtnLike.find('svg path').attr('d', likeEmpty);
                        reactionBtnDislike.find('svg path').attr('d', dislikeActive);
                        reactionBtnDislike.addClass('active');
                        reactionBtnLike.removeClass('active');
                    }
                    else if (dislike && reactionBtnDislike.hasClass('active')){
                        reactionBtnDislike.find('svg path').attr('d', dislikeEmpty);
                        reactionBtnDislike.removeClass('active');
                    }

                },
                error: function () {
                    alert('Something went wrong!');
                }
            })
        }


    </script>
}